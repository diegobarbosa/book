Verify:
- Parts
	Parts 3, Scale out
- Chapters


## Transformers in indexing

Here we can also show include as well

## Distributed Transactions

## Application databases vs. Organizational database

Fallacties of distributed computing

- Replication
	- Server prefix
	- Use master to ensure optimistic concurrency in round robin

- Bundles
	- Unique constraints

- Trouble shooting
	- show timings
	- replication stats

## Things to talk about in book

- unstructured data in ravendb
	
Document based modeling

bundles

deals with operations and monitoring (backup, restore)

helps you debug any issues as well as write tests for them.

 deal with reporting, SQL Replication

- replication

- sharding

- security

- Using RavenHQ

# query statistics

* facets, full text search, terms, suggestions

Excel integration

Deep paging

## Set based operations

Unlike a relational database, in RavenDB you are usually operating on a single document (or a very small number of documents) at a time. The recommended practice is that the handling of a business request will load a single document (although it is common to need a bit more than that) and make changes to a single document.

You have already seen that the client API is well optimize for just this scenario. However, there are frequently tasks in which we need to do something to a whole set of documents. That is why RavenDB has specific set based operations. Those operations are:

* `DeleteByIndex` - delete all documents matching a particular query.
* `UpdateByIndex` - apply a patch (scripted or simple) to the set of documents matching a particular query.

For example, let us say that we wanted to delete all the discontinued products. We can do that using the following code:

> What about stale results?

# Document based modeling

## Point in Time references

## Anorectic documents

## Obese documents

Raven-Enity-Name
Raven-Clr-Type

RegisterIdConvention

In memory indexing

Indexing debug endpoints - all the data we can get from there.

Index fanout

DocumentQuery - untyped queries

Stored fields

How indexing actually works

Builtin profiler

## Working with dynamic data

### Modeling

### Indexing

One of the stregnths of RavenDB is that it doesn't have a schema. That means that you aren't limited to just 

## Recurse in indexes

## Spatial

## Set based operations
